{"version":3,"sources":["logo.svg","background_looping.mp3","right_answer.mp3","wrong_answer.mp3","next_level.mp3","menu.mp3","Header.jsx","Game.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","console","info","className","onClick","handleReset","src","logo","alt","level","score","shuffleArray","array","i","length","j","Math","floor","random","azbuka","consonants","vowels","Game","componentDidMount","calculateSrichka","background_music","document","getElementsByClassName","clickOnIntro","e","setState","hideIntro","play","reset","log","currentLevel","menu_sound","state","model","levels","setAnimationForTime","vowel","uniqueVowels","indexOf","push","consonant","uniqueConsonants","allLetters","srichka","join","answerCorrect","inc","increase","new_score","maxscore","nextLevel","button_right_sound","answerWrong","dec","decrease","button_wrong_sound","elementClass","animName","animTime","classList","add","setTimeout","remove","that","nextlevel_sound","1","2","3","anim_Srichka","this","gameClass","loop","background_looping","type","ref","button_right_sound_ref","button_wrong_sound_ref","nextlevel_sound_ref","menu_sound_ref","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.363174c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2fa68b3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/background_looping.b3ad5e3b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/right_answer.cd582cf5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong_answer.2f7d4301.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next_level.c3a5ce0d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/menu.f39fae57.mp3\";","import React from \"react\";\nimport logo from \"./logo.svg\";\n\nconst Header = props => {\n    console.info(\"Header props\", props);\n    return (\n        <div className=\"game_Header\">\n            <div className=\"game_Control\" onClick={props.handleReset}>\n                <i className=\"fa fa-refresh\"></i>\n            </div>\n            <div className=\"game_Level\">\n                <img src={logo} className=\"game_Logo\" alt=\"logo\" />\n                <h2>Ниво: {props.level}</h2>\n            </div>\n            <div className=\"game_Score\">{props.score}</div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport background_looping from \"./background_looping.mp3\";\nimport button_right_sound from \"./right_answer.mp3\";\nimport button_wrong_sound from \"./wrong_answer.mp3\";\nimport nextlevel_sound from \"./next_level.mp3\";\nimport menu_sound from \"./menu.mp3\";\n\nconst shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n};\n\nconst azbuka = {\n    consonants: [\n        \"б\",\n        \"в\",\n        \"г\",\n        \"д\",\n        \"ж\",\n        \"й\",\n        \"к\",\n        \"л\",\n        \"м\",\n        \"н\",\n        \"п\",\n        \"р\",\n        \"с\",\n        \"т\",\n        \"ф\",\n        \"х\",\n        \"ц\",\n        \"ч\",\n        \"ш\",\n        \"щ\",\n        \"ю\",\n        \"я\"\n    ],\n    vowels: [\"а\", \"е\", \"и\", \"о\", \"у\", \"ъ\"]\n};\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            score: 0,\n            srichka: \"ГЖМЪЦ\",\n            currentLevel: 1,\n            levels: {\n                1: {\n                    increase: 10,\n                    decrease: 5,\n                    model: {\n                        vowels: 1, // no more then 6\n                        consonants: 1,\n                        uniqueVowels: true,\n                        uniqueConsonants: false\n                    },\n                    maxscore: 100\n                },\n                2: {\n                    increase: 20,\n                    decrease: 10,\n                    model: {\n                        vowels: 1, // no more then 6\n                        consonants: 2,\n                        uniqueVowels: false,\n                        uniqueConsonants: true\n                    },\n                    maxscore: 500\n                },\n                3: {\n                    increase: 50,\n                    decrease: 10,\n                    model: {\n                        vowels: 2, // no more then 6\n                        consonants: 3,\n                        uniqueVowels: true,\n                        uniqueConsonants: true\n                    }\n                }\n            },\n            hideIntro: false,\n            anim_Srichka: false\n        };\n    }\n\n    componentDidMount = () => {\n        this.calculateSrichka();\n        this.background_music = document.getElementsByClassName(\n            \"audio-element\"\n        )[0];\n    };\n\n    clickOnIntro = e => {\n        this.setState({ hideIntro: true });\n        this.background_music.play();\n    };\n    reset = () => {\n        console.log(\"reset\");\n        this.setState({ currentLevel: 1, score: 0, hideIntro: false });\n\n        // force state update\n        //this.setState({});\n\n        //this.calculateSrichka();\n\n        // sound\n        this.menu_sound.play();\n    };\n\n    calculateSrichka = () => {\n        console.info(\n            \"calculateSrichka this.state.currentLevel\",\n            this.state.currentLevel\n        );\n        const levels = this.state.levels;\n        const currentLevel = this.state.currentLevel;\n        const model = levels[currentLevel].model;\n        console.info(\"calculateSrichka model\", model);\n\n        this.setAnimationForTime(\"game_Srichka\", \"game_anim_Flyin\", 1000);\n\n        // Patch model if it exceeds the limits\n        model.vowels =\n            model.vowels <= azbuka.vowels.length\n                ? model.vowels\n                : azbuka.vowels.length;\n        model.consonants =\n            model.consonants <= azbuka.consonants.length\n                ? model.consonants\n                : azbuka.consonants.length;\n\n        // vowels\n        let vowels = [];\n        while (vowels.length < model.vowels) {\n            var vowel =\n                azbuka.vowels[Math.floor(Math.random() * azbuka.vowels.length)];\n            if (model.uniqueVowels) {\n                do {\n                    vowel =\n                        azbuka.vowels[\n                            Math.floor(Math.random() * azbuka.vowels.length)\n                        ];\n                } while (vowels.indexOf(vowel) !== -1);\n                // add it to the list\n                vowels.push(vowel);\n            } else {\n                // add it to the list\n                vowels.push(vowel);\n            }\n        }\n        console.info(\"calculateSrichka vowels\", vowels);\n\n        // consonants\n        let consonants = [];\n        while (consonants.length < model.consonants) {\n            var consonant =\n                azbuka.consonants[\n                    Math.floor(Math.random() * azbuka.consonants.length)\n                ];\n            if (model.uniqueConsonants) {\n                do {\n                    consonant =\n                        azbuka.consonants[\n                            Math.floor(Math.random() * azbuka.consonants.length)\n                        ];\n                } while (consonants.indexOf(consonant) !== -1);\n                // add it to the list\n                consonants.push(consonant);\n            } else {\n                // add it to the list\n                consonants.push(consonant);\n            }\n        }\n\n        console.info(\"calculateSrichka consonants\", consonants);\n\n        let allLetters = [...vowels, ...consonants];\n        console.info(\"calculateSrichka allLetters\", allLetters);\n        shuffleArray(allLetters);\n        console.info(\n            \"calculateSrichka allLetters (affter Shuffle)\",\n            allLetters\n        );\n\n        this.setState({ srichka: allLetters.join(\"\") });\n    };\n\n    answerCorrect = () => {\n        console.log(\"answerCorrect\");\n\n        this.setAnimationForTime(\"game_Right\", \"game_anim_Press\", 1000);\n\n        const inc = this.state.levels[this.state.currentLevel].increase;\n\n        const new_score = this.state.score + inc;\n        if (new_score >= this.state.levels[this.state.currentLevel].maxscore) {\n            this.nextLevel();\n            this.setState({ score: new_score });\n            return true;\n        }\n\n        this.setState({ score: new_score });\n        this.calculateSrichka();\n\n        // sound\n        this.button_right_sound.play();\n    };\n\n    answerWrong = () => {\n        console.log(\"answerWrong\");\n\n        this.setAnimationForTime(\"game_Wrong\", \"game_anim_Press\", 1000);\n\n        const dec = this.state.levels[this.state.currentLevel].decrease;\n        let new_score = this.state.score - dec;\n        new_score = new_score < 0 ? 0 : new_score;\n        this.setState({ score: new_score });\n        this.calculateSrichka();\n\n        // sound\n        this.button_wrong_sound.play();\n    };\n\n    setAnimationForTime = (elementClass, animName, animTime) => {\n        document\n            .getElementsByClassName(elementClass)[0]\n            .classList.add(animName);\n        setTimeout(function() {\n            document\n                .getElementsByClassName(elementClass)[0]\n                .classList.remove(animName);\n        }, animTime);\n    };\n\n    nextLevel = () => {\n        console.log(\"nextLevel\");\n        this.setState({ currentLevel: this.state.currentLevel + 1 });\n\n        setTimeout(\n            function(that) {\n                that.calculateSrichka();\n            },\n            50,\n            this\n        );\n\n        // sound\n        this.nextlevel_sound.play();\n    };\n\n    render() {\n        console.info(\"Game state\", this.state);\n        const gameClass = `game_Holder game_Level${this.state.currentLevel}`;\n        return (\n            <div className={gameClass}>\n                <div className=\"game_Wallpaper\">\n                    <div />\n                    <div />\n                    <div />\n                </div>\n                <div className=\"game_Container\">\n                    <Header\n                        score={this.state.score}\n                        handleReset={this.reset}\n                        level={this.state.currentLevel}\n                    />\n                    <div\n                        className={\n                            this.anim_Srichka\n                                ? \"game_Srichka game_anim_Bounce\"\n                                : \"game_Srichka\"\n                        }\n                    >\n                        <span>{this.state.srichka}</span>\n                    </div>\n                    <div className=\"game_ButtonsHolder\">\n                        <button\n                            className=\"game_Right\"\n                            onClick={this.answerCorrect}\n                        >\n                            ВЯРНО\n                        </button>\n                        <button\n                            className=\"game_Wrong\"\n                            onClick={this.answerWrong}\n                        >\n                            ГРЕШНО\n                        </button>\n                    </div>\n\n                    {/* <button className=\"game_Button\" onClick={this.nextLevel}>\n                        NEXT LEVEL\n                    </button> */}\n                </div>\n\n                {!this.state.hideIntro ? (\n                    <div className=\"game_Intro\">\n                        <h1>Сричка</h1>\n                        <p>\n                            \"Сричка\" е игра/генератор на срички за улеснение на\n                            първолаците в изговарянето им. <br />\n                            Правилата са много лесни:\n                            <ul>\n                                <li>\n                                    Имаме (за сега) 3 нива на сложност - започва\n                                    се с двубуквени срички като всяко следващо\n                                    ниво е по-сложно\n                                </li>\n                                <li>\n                                    След изговарянето на сричката родителя\n                                    натиска бутона \"ВЯРНО\" или \"ГРЕШНО\", с което\n                                    се увеличават точките или съответно\n                                    намаляват.\n                                </li>\n                                <li>\n                                    При достигането на точките за следващо ниво,\n                                    то играча преминава в него.\n                                </li>\n                            </ul>\n                            Желаем приятни моменти със \"Сричка\" 😜\n                        </p>\n                        <button onClick={this.clickOnIntro}>СТАРТ</button>\n                    </div>\n                ) : null}\n\n                <audio className=\"audio-element\" loop>\n                    <source src={background_looping} type=\"audio/mpeg\"></source>\n                </audio>\n                {/* Button Sounds */}\n                <audio\n                    ref={button_right_sound_ref => {\n                        this.button_right_sound = button_right_sound_ref;\n                    }}\n                >\n                    <source src={button_right_sound} type=\"audio/mpeg\" />\n                </audio>\n                <audio\n                    ref={button_wrong_sound_ref => {\n                        this.button_wrong_sound = button_wrong_sound_ref;\n                    }}\n                >\n                    <source src={button_wrong_sound} type=\"audio/mpeg\" />\n                </audio>\n                <audio\n                    ref={nextlevel_sound_ref => {\n                        this.nextlevel_sound = nextlevel_sound_ref;\n                    }}\n                >\n                    <source src={nextlevel_sound} type=\"audio/mpeg\" />\n                </audio>\n                <audio\n                    ref={menu_sound_ref => {\n                        this.menu_sound = menu_sound_ref;\n                    }}\n                >\n                    <source src={menu_sound} type=\"audio/mpeg\" />\n                </audio>\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Game from \"./Game\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Game />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}